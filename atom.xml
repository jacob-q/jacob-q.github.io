<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jacob&#39;s Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-02-02T13:09:00.074Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Html-iframe-标签</title>
    <link href="http://example.com/2021/02/02/2021-2-2-HTML-iframe-%E6%A0%87%E7%AD%BE/"/>
    <id>http://example.com/2021/02/02/2021-2-2-HTML-iframe-%E6%A0%87%E7%AD%BE/</id>
    <published>2021-02-02T11:50:00.000Z</published>
    <updated>2021-02-02T13:09:00.074Z</updated>
    
    <content type="html"><![CDATA[<h3 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h3><p>iframe 元素会创建包含另外一个文档的内联框架（即行内框架）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;URL&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><table><thead><tr><th align="left">属性</th><th align="left">值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><a href="https://www.w3school.com.cn/tags/att_iframe_align.asp">align</a></td><td align="left">leftrighttopmiddlebottom</td><td align="left">不赞成使用。请使用样式代替。规定如何根据周围的元素来对齐此框架。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/tags/att_iframe_frameborder.asp">frameborder</a></td><td align="left">10</td><td align="left">规定是否显示框架周围的边框。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/tags/att_iframe_height.asp">height</a></td><td align="left">pixels，%</td><td align="left">规定 iframe 的高度。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/tags/att_iframe_longdesc.asp">longdesc</a></td><td align="left"><em>URL</em></td><td align="left">规定一个页面，该页面包含了有关 iframe 的较长描述。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/tags/att_iframe_marginheight.asp">marginheight</a></td><td align="left"><em>pixels</em></td><td align="left">定义 iframe 的顶部和底部的边距。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/tags/att_iframe_marginwidth.asp">marginwidth</a></td><td align="left"><em>pixels</em></td><td align="left">定义 iframe 的左侧和右侧的边距。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/tags/att_iframe_name.asp">name</a></td><td align="left"><em>frame_name</em></td><td align="left">规定 iframe 的名称。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/tags/att_iframe_sandbox.asp">sandbox</a></td><td align="left">allow-formsallow-same-originallow-scriptsallow-top-navigation</td><td align="left">启用一系列对 &lt;iframe&gt; 中内容的额外限制。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/tags/att_iframe_scrolling.asp">scrolling</a></td><td align="left">yesnoauto</td><td align="left">规定是否在 iframe 中显示滚动条。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/tags/att_iframe_seamless.asp">seamless</a></td><td align="left">seamless</td><td align="left">规定 &lt;iframe&gt; 看上去像是包含文档的一部分。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/tags/att_iframe_src.asp">src</a></td><td align="left"><em>URL</em></td><td align="left">规定在 iframe 中显示的文档的 URL。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/tags/att_iframe_srcdoc.asp">srcdoc</a></td><td align="left"><em>HTML_code</em></td><td align="left">规定在 &lt;iframe&gt; 中显示的页面的 HTML 内容。</td></tr><tr><td align="left"><a href="https://www.w3school.com.cn/tags/att_iframe_width.asp">width</a></td><td align="left">pixels，%</td><td align="left">定义 iframe 的宽度。</td></tr></tbody></table><hr><h3 id="实例：页面插入bilibili视频"><a href="#实例：页面插入bilibili视频" class="headerlink" title="实例：页面插入bilibili视频"></a>实例：页面插入bilibili视频</h3><p>b站没有广告好评，而且自带弹幕，文章里引用视频的话感觉比本地链接方便多了，而且不占空间，如果用dplayer的话需要上传本地视频，占空间大（gitee只有5g免费），而且弹幕设置很麻烦</p><h4 id="bilibil链接参数"><a href="#bilibil链接参数" class="headerlink" title="bilibil链接参数"></a>bilibil链接参数</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">https://player.bilibili.com/player.html?bvid=BV1Ux411d7Kh&amp;page=1&amp;as_wide=1&amp;high_quality=1&amp;danmaku=1<br></code></pre></td></tr></table></figure><table><thead><tr><th>key</th><th>说明</th></tr></thead><tbody><tr><td>cid</td><td>chat id，每个chat id对应一组弹幕池和 如填了 aid, 这个字段不填也没关系</td></tr><tr><td>aid</td><td>article id, 视频的av号 就是B站的 avxxxx 后面的数字</td></tr><tr><td>bvid</td><td>bilibili video id, 视频的bv号 2020.03 时候, B站把 AV 号根据一定的算法转成这个了 如果填了 bvid, 那么 aid 不填也可以</td></tr><tr><td>page</td><td>第几个视频, 起始下标为 1 (默认值也是为1) 就是B站视频, 选集里的, 第几个视频</td></tr><tr><td>as_wide</td><td>是否宽屏 1: 宽屏, 0: 小屏</td></tr><tr><td>high_quality</td><td>是否高清 1: 高清, 0: 最低视频质量(默认) 如视频有 360p 720p 1080p 三种, 默认或者 high_quality=0 是最低 360p high_quality=1 是最高1080p</td></tr><tr><td>danmaku</td><td>是否开启弹幕 1: 开启(默认), 0: 关闭</td></tr><tr><td>t</td><td>打开时, 自动跳转到某个时间, 并且自动播放(单位秒) 比如 t=60, 那么自动跳转到1分钟, 且自动播放</td></tr></tbody></table><h4 id="阻止跳转到B站"><a href="#阻止跳转到B站" class="headerlink" title="阻止跳转到B站"></a>阻止跳转到B站</h4><p>在网页上, 用户选择清晰度, 或者点击视频上面的一些图标, 会跳转到B站。 这个可通过设置 iframe 的 sandbox 属性去禁止：sandbox=“allow-top-navigation allow-same-origin allow-forms allow-scripts”</p><h4 id="我的配置"><a href="#我的配置" class="headerlink" title="我的配置"></a>我的配置</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://player.bilibili.com/player.html?bvid=BV19x411c7LW&amp;page=1&amp;as_wide=1&amp;high_quality=1&amp;danmaku=1&quot;</span> <span class="hljs-attr">scrolling</span>=<span class="hljs-string">&quot;no&quot;</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">frameborder</span>=<span class="hljs-string">&quot;no&quot;</span> <span class="hljs-attr">framespacing</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">allowfullscreen</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">high_quality</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">scrolling</span>=<span class="hljs-string">&quot;yes&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100%&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;670&quot;</span> <span class="hljs-attr">sandbox</span>=<span class="hljs-string">&quot;allow-top-navigation allow-same-origin allow-forms allow-scripts&quot;</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br></code></pre></td></tr></table></figure><p>效果如下：</p><iframe src="https://player.bilibili.com/player.html?bvid=BV19x411c7LW&page=1&as_wide=1&high_quality=1&danmaku=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" high_quality="1" scrolling="yes" width="100%" height="670" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"> </iframe><hr><h3 id="还没解决的问题"><a href="#还没解决的问题" class="headerlink" title="还没解决的问题"></a>还没解决的问题</h3><p>b站不登录最高画质限制480p，iframe引用的播放器不知道怎么设置b站登录，所以暂时只能播放480p的视频。。</p><hr><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://www.w3school.com.cn/tags/tag_iframe.asp">https://www.w3school.com.cn/tags/tag_iframe.asp</a></p><p><a href="https://blog.csdn.net/xinshou_caizhu/article/details/94028606">https://blog.csdn.net/xinshou_caizhu/article/details/94028606</a></p><p><a href="https://xbeibeix.com/bilibili3/">https://xbeibeix.com/bilibili3/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;定义和用法&quot;&gt;&lt;a href=&quot;#定义和用法&quot; class=&quot;headerlink&quot; title=&quot;定义和用法&quot;&gt;&lt;/a&gt;定义和用法&lt;/h3&gt;&lt;p&gt;iframe 元素会创建包含另外一个文档的内联框架（即行内框架）。&lt;/p&gt;
&lt;figure class=&quot;highl</summary>
      
    
    
    
    <category term="html" scheme="http://example.com/categories/html/"/>
    
    
    <category term="html" scheme="http://example.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客插入全局音乐播放器</title>
    <link href="http://example.com/2021/02/01/2021-2-1-hexo%E5%8D%9A%E5%AE%A2%E6%8F%92%E5%85%A5%E5%85%A8%E5%B1%80%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/"/>
    <id>http://example.com/2021/02/01/2021-2-1-hexo%E5%8D%9A%E5%AE%A2%E6%8F%92%E5%85%A5%E5%85%A8%E5%B1%80%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/</id>
    <published>2021-02-01T09:15:00.000Z</published>
    <updated>2021-02-01T12:21:04.979Z</updated>
    
    <content type="html"><![CDATA[<p> 起因想在博客插入音乐播放器，然鹅我用的fluid主题并不提供播放器插件教程，所以只能自己找方法插入播放器。</p><p>在网上找到的几个方法：</p><h4 id="方法1："><a href="#方法1：" class="headerlink" title="方法1："></a>方法1：</h4><p>根据aplayer的官方文档：<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md</a></p><p>单首音乐：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% aplayer &quot;Caffeine&quot; &quot;Jeff Williams&quot; &quot;caffeine.mp3&quot; &quot;picture.jpg&quot; &quot;lrc:caffeine.txt&quot; %&#125;<br></code></pre></td></tr></table></figure><p>多首：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% aplayerlist %&#125;<br>&#123;<br><span class="hljs-code">    &quot;narrow&quot;: false,                          // （可选）播放器袖珍风格</span><br><span class="hljs-code">    &quot;autoplay&quot;: true,                         // （可选) 自动播放，移动端浏览器暂时不支持此功能</span><br><span class="hljs-code">    &quot;mode&quot;: &quot;random&quot;,                         // （可选）曲目循环类型，有 &#x27;random&#x27;（随机播放）, &#x27;single&#x27; (单曲播放), &#x27;circulation&#x27; (循环播放), &#x27;order&#x27; (列表播放)， 默认：&#x27;circulation&#x27; </span><br><span class="hljs-code">    &quot;showlrc&quot;: 3,                             // （可选）歌词显示配置项，可选项有：1,2,3</span><br><span class="hljs-code">    &quot;mutex&quot;: true,                            // （可选）该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</span><br><span class="hljs-code">    &quot;theme&quot;: &quot;#e6d0b2&quot;,                      // （可选）播放器风格色彩设置，默认：#b7daff</span><br><span class="hljs-code">    &quot;preload&quot;: &quot;metadata&quot;,                    // （可选）音乐文件预载入模式，可选项： &#x27;none&#x27; &#x27;metadata&#x27; &#x27;auto&#x27;, 默认: &#x27;auto&#x27;</span><br><span class="hljs-code">    &quot;listmaxheight&quot;: &quot;513px&quot;,                 // (可选) 该播放列表的最大长度</span><br><span class="hljs-code">    &quot;music&quot;: [</span><br><span class="hljs-code">        &#123;</span><br><span class="hljs-code">            &quot;title&quot;: &quot;CoCo&quot;,</span><br><span class="hljs-code">            &quot;author&quot;: &quot;Jeff Williams&quot;,</span><br><span class="hljs-code">            &quot;url&quot;: &quot;caffeine.mp3&quot;,</span><br><span class="hljs-code">            &quot;pic&quot;: &quot;caffeine.jpeg&quot;,</span><br><span class="hljs-code">            &quot;lrc&quot;: &quot;caffeine.txt&quot;</span><br><span class="hljs-code">        &#125;,</span><br><span class="hljs-code">        &#123;</span><br><span class="hljs-code">            &quot;title&quot;: &quot;アイロニ&quot;,</span><br><span class="hljs-code">            &quot;author&quot;: &quot;鹿乃&quot;,</span><br><span class="hljs-code">            &quot;url&quot;: &quot;irony.mp3&quot;,</span><br><span class="hljs-code">            &quot;pic&quot;: &quot;irony.jpg&quot;</span><br><span class="hljs-code">        &#125;</span><br><span class="hljs-code">    ]</span><br><span class="hljs-code">&#125;</span><br><span class="hljs-code">&#123;% endaplayerlist %&#125;</span><br></code></pre></td></tr></table></figure><p>使用qq或网易云等外链歌单：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% meting &quot;60198&quot; &quot;netease&quot; &quot;playlist&quot; &quot;autoplay&quot; &quot;mutex:false&quot; &quot;listmaxheight:340px&quot; &quot;preload:none&quot; &quot;theme:#ad7a86&quot;%&#125;<br></code></pre></td></tr></table></figure><p>还需编辑主题配置文件_config.yml，在文件末尾追加以下内容：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># aplayer</span><br>aplayer:  <br>  meting: true<br></code></pre></td></tr></table></figure><p>缺点：markdown格式标签，只能在markdown文件中使用，而fluid主题使用jsp脚本生成主页，脚本文件格式为ejs，只有hexo new page自建网页能用markdown格式编写，无法实现全局播放，故舍弃。</p><h4 id="方法2："><a href="#方法2：" class="headerlink" title="方法2："></a>方法2：</h4><p>在主题目录/layout/_partial/footer.ejs文件中（即页脚）直接插入html代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;% if(theme.aplayer.enable) &#123; %&gt;<br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!-- // 这里div的样式是笔者自己修改过的，你可以直接使用APlayer官方的原配置：&lt;div id=&quot;aplayer&quot;&gt;&lt;/div&gt; --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;aplayer&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position:absolute;left;0;bottom:0;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/color-thief-don@2.0.2/src/color-thief.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">  <span class="hljs-keyword">const</span> ap = <span class="hljs-keyword">new</span> APlayer(&#123;</span><br><span class="javascript">    container: <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;aplayer&#x27;</span>),</span><br><span class="javascript">    autoplay: <span class="hljs-literal">false</span>, <span class="hljs-comment">//自动播放</span></span><br><span class="javascript">    listFolded: <span class="hljs-literal">true</span>, <span class="hljs-comment">//播放列表默认折叠</span></span><br><span class="javascript">    listMaxHeight: <span class="hljs-number">90</span>, <span class="hljs-comment">//播放列表最大高度</span></span><br><span class="javascript">    order: <span class="hljs-string">&#x27;list&#x27;</span>, <span class="hljs-comment">//音频循环顺序, 可选值: &#x27;list&#x27;, &#x27;random&#x27;</span></span><br><span class="javascript">    loop: <span class="hljs-string">&#x27;all&#x27;</span>, <span class="hljs-comment">//音频循环播放, 可选值: &#x27;all&#x27;, &#x27;one&#x27;, &#x27;none&#x27;</span></span><br><span class="javascript">    theme: <span class="hljs-string">&#x27;#e9e9e9&#x27;</span>, <span class="hljs-comment">//切换音频时的主题色，优先级低于audio.theme</span></span><br><span class="javascript">    preload: <span class="hljs-string">&#x27;none&#x27;</span>, <span class="hljs-comment">//音频预加载，可选值: &#x27;none&#x27;, &#x27;metadata&#x27;, &#x27;auto&#x27;</span></span><br><span class="javascript">    mutex: <span class="hljs-literal">true</span>, <span class="hljs-comment">//互斥，阻止多个播放器同时播放，当前播放器播放时暂停其他播放器</span></span><br><span class="javascript">    lrcType: <span class="hljs-number">3</span>, <span class="hljs-comment">//歌词格式，可选值：3（LRC文件歌词格式），1（JS字符串歌词格式）</span></span><br><span class="javascript">    volume: <span class="hljs-number">0.7</span>, <span class="hljs-comment">//默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span></span><br><span class="javascript">    fixed: <span class="hljs-literal">false</span>, <span class="hljs-comment">//吸底模式（fixed:true），迷你模式（mini:true），普通模式（注释此行或者设置fixed:false）</span></span><br>    audio: [&#123;<br><span class="javascript">        name: <span class="hljs-string">&#x27;平凡之路&#x27;</span>,</span><br><span class="javascript">        artist: <span class="hljs-string">&#x27;朴树&#x27;</span>,</span><br><span class="javascript">        lrc: <span class="hljs-string">&#x27;/downloads/lrc/平凡之路-朴树.lrc&#x27;</span>,</span><br><span class="javascript">        cover: <span class="hljs-string">&#x27;http://p2.music.126.net/W_5XiCv3rGS1-J7EXpHSCQ==/18885211718782327.jpg?param=300x300&#x27;</span>,</span><br><span class="javascript">        url: <span class="hljs-string">&#x27;http://fs.open.kugou.com/cd5cbe8edb012e4f77b0857cefc0956e/5c66accf/G097/M08/0A/1F/AYcBAFkQGpOAMUpuAEm-3SlWMyk951.mp3&#x27;</span></span><br>      &#125;,<br>      &#123;<br><span class="javascript">        name: <span class="hljs-string">&#x27;后会无期&#x27;</span>,</span><br><span class="javascript">        artist: <span class="hljs-string">&#x27;G.E.M.邓紫棋&#x27;</span>,</span><br><span class="javascript">        lrc: <span class="hljs-string">&#x27;/downloads/lrc/后会无期-G.E.M.邓紫棋.lrc&#x27;</span>,</span><br><span class="javascript">        cover: <span class="hljs-string">&#x27;http://p1.music.126.net/vpvPajo3kn88nHc7jUjeWQ==/5974746185758035.jpg?param=300x300&#x27;</span>,</span><br><span class="javascript">        url: <span class="hljs-string">&#x27;http://m10.music.126.net/20190215193113/e5afc8b5376136029366f2053cf30f85/ymusic/2c87/6ec3/582e/0d572dcc04f8de34133c0f364b74c30c.mp3&#x27;</span></span><br>      &#125;<br>    ]<br>  &#125;);<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>&lt;% &#125; %&gt;<br></code></pre></td></tr></table></figure><p>还需编辑主题配置文件_config.yml，在文件末尾追加以下内容：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># aplayer</span><br>aplayer:  <br>  enable: true<br>  meting: true<br></code></pre></td></tr></table></figure><p>缺点：需要逐个且手动敲代码设置播放列表里的音乐，无法灵活调整，且如果不上传至云盘的话，歌词和图片需要自行搜索下载下来使用本地地址，增加博客大小，故舍弃。</p><h4 id="方法3："><a href="#方法3：" class="headerlink" title="方法3："></a>方法3：</h4><p>在找方法的时候发现的一个帖子：<a href="https://blog.csdn.net/weixin_43471926/article/details/109798928">https://blog.csdn.net/weixin_43471926/article/details/109798928</a>，</p><p>其中有一段：其会被渲染为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;aplayer-uxAIfEUs&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;aplayer aplayer-tag-marker meting-tag-marker&quot;</span> <span class="hljs-attr">data-id</span>=<span class="hljs-string">&quot;000PeZCQ1i4XVs&quot;</span> <span class="hljs-attr">data-server</span>=<span class="hljs-string">&quot;tencent&quot;</span> <span class="hljs-attr">data-type</span>=<span class="hljs-string">&quot;artist&quot;</span> <span class="hljs-attr">data-mode</span>=<span class="hljs-string">&quot;circulation&quot;</span> <span class="hljs-attr">data-autoplay</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">data-mutex</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">data-listmaxheight</span>=<span class="hljs-string">&quot;340px&quot;</span> <span class="hljs-attr">data-preload</span>=<span class="hljs-string">&quot;auto&quot;</span> <span class="hljs-attr">data-theme</span>=<span class="hljs-string">&quot;#3F51B5&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>即方法1meting外链歌单markdown格式编译成html格式后的代码。</p><p>结合方法1，2，既然方法2的原理是直接插入html代码，那可以尝试把其中播放器部分改为编译后meting代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;% if(theme.aplayer.enable) &#123; %&gt;<br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- // 这里div的样式是笔者自己修改过的，你可以直接使用APlayer官方的原配置：&lt;div id=&quot;aplayer&quot;&gt;&lt;/div&gt; --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;aplayer-uxAIfEUs&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;aplayer aplayer-tag-marker meting-tag-marker&quot;</span> <span class="hljs-attr">data-id</span>=<span class="hljs-string">&quot;7877855078&quot;</span> <span class="hljs-attr">data-server</span>=<span class="hljs-string">&quot;tencent&quot;</span> <span class="hljs-attr">data-type</span>=<span class="hljs-string">&quot;playlist&quot;</span> <span class="hljs-attr">data-mode</span>=<span class="hljs-string">&quot;circulation&quot;</span> <span class="hljs-attr">data-autoplay</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">data-mutex</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">data-listmaxheight</span>=<span class="hljs-string">&quot;340px&quot;</span> <span class="hljs-attr">data-preload</span>=<span class="hljs-string">&quot;metadata&quot;</span> <span class="hljs-attr">data-theme</span>=<span class="hljs-string">&quot;#3F51B5&quot;</span> <span class="hljs-attr">data-volume</span>=<span class="hljs-string">1</span> <span class="hljs-attr">data-fixed</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">data-mini</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    &lt;% &#125; %&gt;<br></code></pre></td></tr></table></figure><p>播放器选项格式为“data-xxxxxx=xxxxxx”，参考aplayer文档。</p><p>最终效果：</p><p><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210201193005.png" alt="QQ截图20210201180845"></p><p>搭配上一篇在新标签页打开，可以实现后台播放音乐。</p><h3 id="一些还没解决的问题："><a href="#一些还没解决的问题：" class="headerlink" title="一些还没解决的问题："></a>一些还没解决的问题：</h3><h5 id="1："><a href="#1：" class="headerlink" title="1："></a>1：</h5><h5 id=""><a href="#" class="headerlink" title=""></a><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210201193006.png" alt="QQ截图20210201181340"></h5><p>每次加载都默认歌词打开，找了aplayer文档发现好像没有控制歌词默认开关标签。</p><p>所以我的解决方法是。。。选一首纯音乐作为第一首歌，</p><p><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210201193007.png" alt="QQ截图20210201181652"></p><p>搭配歌词加载时的loading字样，本着又不是用不了原则，可以顺便把其当成播放器加载提示字幕，</p><p><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210201193008.png" alt="QQ截图20210201181812"></p><h5 id="2："><a href="#2：" class="headerlink" title="2："></a>2：</h5><p>mutex防冲突只能在同一个页面生效，两个页面同时播放并不会强制暂停，所以我的解决方法是。。。手动暂停</p><p>🙄</p><hr><p>参考文章：</p><p><a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md</a></p><p><a href="https://blog.csdn.net/weixin_43471926/article/details/109798928">https://blog.csdn.net/weixin_43471926/article/details/109798928</a></p><p><a href="https://blog.csdn.net/qq_27439819/article/details/105011943">https://blog.csdn.net/qq_27439819/article/details/105011943</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 起因想在博客插入音乐播放器，然鹅我用的fluid主题并不提供播放器插件教程，所以只能自己找方法插入播放器。&lt;/p&gt;
&lt;p&gt;在网上找到的几个方法：&lt;/p&gt;
&lt;h4 id=&quot;方法1：&quot;&gt;&lt;a href=&quot;#方法1：&quot; class=&quot;headerlink&quot; title=&quot;方法1</summary>
      
    
    
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>解决hexo博客链接无法在新标签页打开问题</title>
    <link href="http://example.com/2021/02/01/2021-2-1-%E8%A7%A3%E5%86%B3hexo%E5%8D%9A%E5%AE%A2%E9%93%BE%E6%8E%A5%E6%97%A0%E6%B3%95%E5%9C%A8%E6%96%B0%E6%A0%87%E7%AD%BE%E9%A1%B5%E6%89%93%E5%BC%80%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2021/02/01/2021-2-1-%E8%A7%A3%E5%86%B3hexo%E5%8D%9A%E5%AE%A2%E9%93%BE%E6%8E%A5%E6%97%A0%E6%B3%95%E5%9C%A8%E6%96%B0%E6%A0%87%E7%AD%BE%E9%A1%B5%E6%89%93%E5%BC%80%E9%97%AE%E9%A2%98/</id>
    <published>2021-02-01T06:43:00.000Z</published>
    <updated>2021-02-01T12:37:38.580Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h4><p>在原本hexo博客里默认链接在本页打开，但是个人习惯在新标签页打开，可以防止上一页静态内容被关闭重新运行。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># 打开文章的标签方式</span><br><span class="hljs-section"># The browser tag to open the post</span><br><span class="hljs-section"># Available: <span class="hljs-emphasis">_blank | _</span>self</span><br>post<span class="hljs-emphasis">_url_</span>target: <span class="hljs-emphasis">_blank</span><br></code></pre></td></tr></table></figure><p>↑主题提供的更改打开标签方式尝试没有修改效果，猜测哪里出了bug，于是去网上搜索其它更改方法</p><h4 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h4><p>最终找到解决办法为：在主题文件夹目录下/layout/layout.ejs文件中，&lt;head&gt;标签处插入如下代码（没找到head，就放在&lt;body&gt;上面了，也成功了）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">base</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210201150726.png" alt="QQ截图20210201150352"></p><h4 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h4><p>HTML&lt;base&gt;标签。&lt;base&gt;标签为页面上的所有链接规定默认地址或默认目标。通常情况下，浏览器会从当前文档的 URL 中提取相应的元素来填写相对 URL 中的空白。</p><p>使用 &lt;base&gt; 标签可以改变这一点。浏览器随后将不再使用当前文档的 URL，而使用指定的基本 URL 来解析所有的相对 URL。这其中包括 &lt;a&gt;、&lt;img&gt;、&lt;link&gt;、&lt;form&gt; 标签中的 URL。&lt;base&gt; 标签必须位于 head 元素内部。</p><p>此外，ctrl+鼠标左键可以直接在新标签页打开。</p><hr><h4 id="改进："><a href="#改进：" class="headerlink" title="改进："></a>改进：</h4><p>之前的全局添加方法有bug，base标签会识别网页上所有标签，包括。。目录和回到顶部，也会以新标签页的形式打开，本来一些应该在本页跳转的按钮因此变得不方便。</p><p><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210201203713.png" alt="QQ截图20210201201147"><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210201203727.png" alt="QQ截图20210201201133"></p><h4 id="解决方法：-1"><a href="#解决方法：-1" class="headerlink" title="解决方法："></a>解决方法：</h4><p>找到index.ejs和nav.ejs，即主页文章和顶部标签栏，</p><p><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210201203728.png" alt="QQ截图20210201201413"></p><p>然后根据标签class找到对应&lt;a&gt;标签位置，只在主页文章和标签栏的超链接处添加target=_blank，</p><p><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210201203729.png" alt="QQ截图20210201201443"></p><p><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210201203730.png" alt="QQ截图20210201201734"></p><p>之后就可以区分本页和新标签页的打开了。</p><h4 id="一些还没解决的问题："><a href="#一些还没解决的问题：" class="headerlink" title="一些还没解决的问题："></a>一些还没解决的问题：</h4><p>当浏览器存在两个或以上相同的页面时，点击超链接时两个页面会同时跳转，</p><p><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210201203731.png" alt="QQ截图20210201202138"><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210201203732.png" alt="QQ截图20210201202337"></p><p>当点击新标签页打开的超链接时，就会打开同样数量的新页面，</p><p><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210201203733.png" alt="QQ截图20210201202152"></p><p>所以，如果不注意的话，就会出现，</p><p><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210201203734.png" alt="QQ截图20210201202648"></p><p>这样的情况。。</p><p>目前还不知道具体原因，猜测是所有页面的相同的超链接同时响应了跳转请求。本着又不是不能用的原则，等技术增长以后再解决吧。</p><hr><p>参考文章：</p><p><a href="https://www.jianshu.com/p/1a0bdfb274d4?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">https://www.jianshu.com/p/1a0bdfb274d4?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;问题：&quot;&gt;&lt;a href=&quot;#问题：&quot; class=&quot;headerlink&quot; title=&quot;问题：&quot;&gt;&lt;/a&gt;问题：&lt;/h4&gt;&lt;p&gt;在原本hexo博客里默认链接在本页打开，但是个人习惯在新标签页打开，可以防止上一页静态内容被关闭重新运行。&lt;/p&gt;
&lt;figure </summary>
      
    
    
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>VScode编辑器快捷输入</title>
    <link href="http://example.com/2021/01/30/2021-1-30-VScode%E7%BC%96%E8%BE%91%E5%99%A8%E5%BF%AB%E6%8D%B7%E8%BE%93%E5%85%A5/"/>
    <id>http://example.com/2021/01/30/2021-1-30-VScode%E7%BC%96%E8%BE%91%E5%99%A8%E5%BF%AB%E6%8D%B7%E8%BE%93%E5%85%A5/</id>
    <published>2021-01-30T02:16:00.000Z</published>
    <updated>2021-02-01T12:43:52.980Z</updated>
    
    <content type="html"><![CDATA[<h2 id="VSCode编辑器使用技巧：快捷输入HTML代码"><a href="#VSCode编辑器使用技巧：快捷输入HTML代码" class="headerlink" title="VSCode编辑器使用技巧：快捷输入HTML代码"></a>VSCode编辑器使用技巧：快捷输入HTML代码</h2><p>VSCode中有一些快捷编辑HTML的方法，能大大提高工作效率，在这记录一些。</p><p>1.输入html:5,然后回车—&gt;生成页面模板</p><p> 2.输入！回车 –&gt;快速生成页面代码</p><p> 3.输 入link:css 回车 –&gt;引入css样式文件，输入scrip:src引入js</p><p> 4.输入标签名按tab或者回车自动补齐 ，输入h2{文本} –&gt;&lt;h2&gt;文本&lt;h2&gt;</p><h3 id="（一）主命令框"><a href="#（一）主命令框" class="headerlink" title="（一）主命令框"></a>（一）主命令框</h3><p>F1或 Ctrl+Shift+P: 打开命令面板。在打开的输入框内，可以输入任何命令，例如：按一下Backspace会进入到 Ctrl+P模式</p><p>在Ctrl+P下输入&gt;可以进入Ctrl+Shift+P模式</p><p>在 Ctrl+P窗口下还可以:<br> 直接输入文件名，跳转到文件<br> ?列出当前可执行的动作<br> !显示 Errors或 Warnings，也可以Ctrl+Shift+M<br> :跳转到行数，也可以 Ctrl+G直接进入<br> @跳转到symbol（搜索变量或者函数），也可以 Ctrl+Shift+O直接进入<br> @根据分类跳转symbol，查找属性或函数，也可以 Ctrl+Shift+O后输入:进入</p><p>根据名字查找 symbol，也可以 Ctrl+T</p><h3 id="（二）常用快捷键"><a href="#（二）常用快捷键" class="headerlink" title="（二）常用快捷键"></a>（二）常用快捷键</h3><p>说明  快捷键<br> 打开一个新窗口：    Ctrl+Shift+N<br> 关闭窗口：   Ctrl+Shift+W<br> 同时打开多个编辑器（查看多个文件）<br> 切出一个新的编辑器（最多 3 个）   Ctrl+\，也可以按住 Ctrl 鼠标点击 Explorer 里的文件名<br> 左中右 3 个编辑器的快捷键  Ctrl+1 Ctrl+2 Ctrl+3<br> 编辑器换位置  Ctrl+k然后按 Left或 Right<br> 文件之间切换  Ctrl+Tab<br> 打开集成终端  Ctrl+`</p><h3 id="（三）代码编辑"><a href="#（三）代码编辑" class="headerlink" title="（三）代码编辑"></a>（三）代码编辑</h3><h5 id="1-格式调整"><a href="#1-格式调整" class="headerlink" title="1.格式调整"></a>1.格式调整</h5><p>注意： 对python文件进行代码格式化操作时，会提示安装autopep8</p><p>代码格式化： Shift+Alt+F，或 Ctrl+Shift+P 后输入 format code<br> 代码行缩进: Ctrl+[ 、 Ctrl+]<br> 在当前行下边插入一行 Ctrl+Enter<br> 在当前行上方插入一行 Ctrl+Shift+Enter<br> 上下移动一行： Alt+Up 或 Alt+Down<br> 向上向下复制一行： Shift+Alt+Up 或 Shift+Alt+Down</p><h5 id="2-光标相关"><a href="#2-光标相关" class="headerlink" title="2.光标相关"></a>2.光标相关</h5><p>移动到定义处： F12<br> 定义处缩略图：只看一眼而不跳转过去:Alt+F12<br> 移动到文件结尾： Ctrl+End<br> 移动到文件开头： Ctrl+Home<br> 跳转到光标上一次(下一次)位置（误操作的回退方案，非常有用）ctrl + Left / Ctrl + Right<br> 注意： 下面两个功能和alt+↑/↓配合，很方便的移动代码块：</p><p>选择从光标到行尾：Shift+End<br> 选择从行首到光标处：Shift+Home<br> 注意： 这两个功能很爽，可以同时编辑一些变量名：</p><p>多行编辑(列编辑)：Ctrl+Alt+Down/Up或者Alt+Shift+鼠标左键，可以批量选中文本并编辑<br> 同时选中所有匹配： Ctrl+Shift+L<br> Ctrl+D 下一个匹配的也被选中 (在 sublime 中是删除当前行，后面自定义快键键中，设置与 Ctrl+Shift+K 互换了)<br> 回退上一个光标操作： Ctrl+U<br> 删除光标右侧的所有字： Ctrl+Delete<br> 扩展/缩小选取范围： Shift+Alt+Left 和 Shift+Alt+Right<br> 多光标选取Alt + 鼠标单击<br> 逐步选中其它相同的symbol Ctrl + D(已更改快捷方式为：Ctrl+Shift+K)<br> 全选相同symbolCtrl + F12<br> 重构（重命名）Symbol F2<br> 查找所有引用了选中symbol的代码 Shift + F12<br> 跳转到symbol的定义处 F12<br> 瞥见下symbol的定义出（在该symbol下方展开面板，显示定义处代码，非常有用）Alt + F12</p><h5 id="3-重构代码"><a href="#3-重构代码" class="headerlink" title="3.重构代码"></a>3.重构代码</h5><p>注意： 查看函数引用和批量休修改函数名，好用：</p><p>重命名：比如要修改一个方法名，可以选中后按 F2，输入新的名字，回车，会发现所有的文件都修改了<br> 找到所有的引用： Shift+F12<br> 同时修改本文件中所有匹配的： Ctrl+F12<br> 跳转到下一个 Error 或 Warning：当有多个错误时可以按 F8逐个跳转<br> 查看 diff： 在 explorer 里选择文件右键 Set file to compare，然后需要对比的文件上右键选择 Compare with file_name_you_chose</p><h5 id="4-查找替换"><a href="#4-查找替换" class="headerlink" title="4.查找替换"></a>4.查找替换</h5><p>查找:Ctrl+F<br> 查找替换:Ctrl+H<br> 整个文件夹中查找:Ctrl+Shift+F</p><h5 id="5-显示相关"><a href="#5-显示相关" class="headerlink" title="5.显示相关"></a>5.显示相关</h5><p>全屏：F11<br> 区域整块放大/缩小：Ctrl +/-<br> 侧边栏显/隐：Ctrl+B<br> 显示资源管理器:Ctrl+Shift+E<br> 显示搜索:Ctrl+Shift+F<br> 显示 Git:Ctrl+Shift+G<br> 显示 Debug:Ctrl+Shift+D<br> 显示 Output:Ctrl+Shift+U</p><h5 id="6-其他"><a href="#6-其他" class="headerlink" title="6.其他"></a>6.其他</h5><p>文件自动保存设置：File -&gt; AutoSave ，或者 Ctrl+Shift+P，输入 auto</p><h3 id="（四）修改默认快捷键"><a href="#（四）修改默认快捷键" class="headerlink" title="（四）修改默认快捷键"></a>（四）修改默认快捷键</h3><p>打开默认键盘快捷方式设置：<br> File（文件） -&gt; Preferences（首选项） -&gt; Keyboard Shortcuts（键盘快捷方式），或者：Alt+F -&gt;p-&gt; k-&gt; 回车。</p><p>修改keybindings.json：(这个是当时自己添加的)</p><p>// ctrl+d 删除一行<br> {<br> “key”: “ctrl+d”,<br> “command”: “editor.action.deleteLines”,<br> “when”: “editorTextFocus”<br> },<br> // 与删除一行的快捷键互换<br> {<br> “key”: “ctrl+shift+k”,<br> “command”: “editor.action.addSelectionToNextFindMatch”,<br> “when”: “editorFocus”<br> },<br> // ctrl+shift+/多行注释<br> {<br> “key”:”ctrl+shift+/“,<br> “command”: “editor.action.blockComment”,<br> “when”: “editorTextFocus”<br> },</p><h3 id="（五）推荐插件"><a href="#（五）推荐插件" class="headerlink" title="（五）推荐插件"></a>（五）推荐插件</h3><h5 id="1-前端插件"><a href="#1-前端插件" class="headerlink" title="1.前端插件"></a>1.前端插件</h5><p>auto close tag 自动关闭HTML标签<br> Auto Rename Tag：自动修改标签<br> AutoFileNmae:auto complete file name，自动补全文件的名字<br> Beautify:显示js/json/css美化，按F1<br> Bracket Pair Colorizer 标记显示不同颜色的关联括号<br> Color Info 显示颜色信息<br> CSS Formatter css格式化工具<br> Debugger for Chrome 谷歌调试工具（需要配置launch.json）<br> Document This 添加备注信息（only supports JavaScript and TypeScript）Ctrl+Alt+D and again Ctrl+Alt+D<br> filesize 文件大小提示<br> GitLens 提示文件修改信息，具体到代码行<br> Guides:显示代码对其辅助线<br> HTML CSS Support css文件支持HTML标签提示<br> HTML Preview 预览编译HTML文件<br> HTML SCSS Support scss文件支持HTML标签提示<br> HTML Snippets 支持HTML标签提示<br> HTMLHint<br> intellisense for css class names in html 支持HTML文件中类名提示<br> JavaScript (ES6) snippets<br> jQuery Code Snippets<br> JS, CSS, HTML Formatting<br> Live HTML Previewer<br> markdownlint<br> Npm Intellisense<br> Path Intellisense: 路径匹配<br> Path Autocomplete<br> Vetur：VUE扩展<br> PostCSS Sorting<br> stylelint<br> stylefmt<br> ESLint<br> javascript standard format<br> Babel ES6/ES7<br> Add jsdoc comments<br> vue<br> weex<br> Reactjs code snippets<br> React Native Tools<br> Instant Markdown<br> Markdown Shortcuts<br> TextTransform<br> Color Highlight:写csss时，颜色值会增加对应的颜色背景显示<br> open in browser: alt+b选择浏览器预览文件<br> Rainbow Brackets：有颜色的显示括号匹配<br> Settings Sync: 同步配置（需要配置GitHub的本地token key）</p><p>注： 切换主题的快捷键：f1 或ctrl+shift+p输入theme 回车,上下切换：ctrl+k,ctrl+t。</p><ul><li>One Dark Pro</li><li>Atom One Dark</li><li>FlatUI</li><li>Material Icon Theme: 图标主题</li><li>vscode-icons</li><li>VSCode Great Icons</li><li>Dracula Official：主题，推荐</li></ul><hr><p>参考文章：</p><p><a href="https://www.jianshu.com/p/8df09959f5e4">https://www.jianshu.com/p/8df09959f5e4</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;VSCode编辑器使用技巧：快捷输入HTML代码&quot;&gt;&lt;a href=&quot;#VSCode编辑器使用技巧：快捷输入HTML代码&quot; class=&quot;headerlink&quot; title=&quot;VSCode编辑器使用技巧：快捷输入HTML代码&quot;&gt;&lt;/a&gt;VSCode编辑器使用技巧：</summary>
      
    
    
    
    <category term="VScode" scheme="http://example.com/categories/VScode/"/>
    
    
    <category term="VScode" scheme="http://example.com/tags/VScode/"/>
    
  </entry>
  
  <entry>
    <title>markdown编写范例</title>
    <link href="http://example.com/2021/01/29/2021-1-29-markdown%E7%BC%96%E5%86%99%E8%8C%83%E4%BE%8B/"/>
    <id>http://example.com/2021/01/29/2021-1-29-markdown%E7%BC%96%E5%86%99%E8%8C%83%E4%BE%8B/</id>
    <published>2021-01-29T05:11:00.000Z</published>
    <updated>2021-01-30T02:14:59.215Z</updated>
    
    <content type="html"><![CDATA[<p>一段markdown编写范例文章，包含大部分markdown语法，留作忘记时备用</p><p>转自<a href="https://www.zybuluo.com/mdeditor">https://www.zybuluo.com/mdeditor</a></p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><code class="hljs clean"># 欢迎使用 Cmd Markdown 编辑阅读器<br><br>------<br><br>我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，**Cmd Markdown** 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：<br><br>&gt; * 整理知识，学习笔记<br>&gt; * 发布日记，杂文，所见所想<br>&gt; * 撰写发布技术文稿（代码支持）<br>&gt; * 撰写发布学术论文（LaTeX 公式支持）<br><br>![cmd-markdown-logo](https:<span class="hljs-comment">//www.zybuluo.com/static/img/logo.png)</span><br><br>除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：<br><br>### [Windows/Mac/Linux 全平台客户端](https:<span class="hljs-comment">//www.zybuluo.com/cmd/)</span><br><br>&gt; 请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 &lt;i <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;icon-file&quot;</span>&gt;&lt;/i&gt; **新文稿** 或者使用快捷键 `Ctrl+Alt+N`。<br><br>------<br><br>## 什么是 Markdown<br><br>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，**粗体** 或者 *斜体* 某些文字，更棒的是，它还可以<br><br>### <span class="hljs-number">1.</span> 制作一份待办事宜 [Todo 列表](https:<span class="hljs-comment">//www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-待办事宜-todo-列表)</span><br><br>- [ ] 支持以 PDF 格式导出文稿<br>- [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率<br>- [x] 新增 Todo 列表功能<br>- [x] 修复 LaTex 公式渲染问题<br>- [x] 新增 LaTex 公式编号功能<br><br>### <span class="hljs-number">2.</span> 书写一个质能守恒公式[^LaTeX]<br><br>$$E=mc^<span class="hljs-number">2</span>$$<br><br>### <span class="hljs-number">3.</span> 高亮一段代码[^<span class="hljs-keyword">code</span>]<br><br>​```python<br>@requires_authorization<br><span class="hljs-keyword">class</span> SomeClass:<br>    pass<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    # A comment<br>    print <span class="hljs-string">&#x27;hello world&#x27;</span><br>​```<br><br>### <span class="hljs-number">4.</span> 高效绘制 [流程图](https:<span class="hljs-comment">//www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图)</span><br><br>​```flow<br>st=&gt;start: Start<br>op=&gt;operation: Your Operation<br>cond=&gt;condition: Yes or No?<br>e=&gt;end<br><br>st-&gt;op-&gt;cond<br>cond(yes)-&gt;e<br>cond(no)-&gt;op<br>​```<br><br>### <span class="hljs-number">5.</span> 高效绘制 [序列图](https:<span class="hljs-comment">//www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-序列图)</span><br><br>​```seq<br>Alice-&gt;Bob: Hello Bob, how are you?<br>Note right <span class="hljs-keyword">of</span> Bob: Bob thinks<br>Bob--&gt;Alice: I am good thanks!<br>​```<br><br>### <span class="hljs-number">6.</span> 高效绘制 [甘特图](https:<span class="hljs-comment">//www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#9-甘特图)</span><br><br>​```gantt<br>    title 项目开发流程<br>    section 项目确定<br>        需求分析       :a1, <span class="hljs-number">2016</span><span class="hljs-number">-06</span><span class="hljs-number">-22</span>, <span class="hljs-number">3</span>d<br>        可行性报告     :after a1, <span class="hljs-number">5</span>d<br>        概念验证       : <span class="hljs-number">5</span>d<br>    section 项目实施<br>        概要设计      :<span class="hljs-number">2016</span><span class="hljs-number">-07</span><span class="hljs-number">-05</span>  , <span class="hljs-number">5</span>d<br>        详细设计      :<span class="hljs-number">2016</span><span class="hljs-number">-07</span><span class="hljs-number">-08</span>, <span class="hljs-number">10</span>d<br>        编码          :<span class="hljs-number">2016</span><span class="hljs-number">-07</span><span class="hljs-number">-15</span>, <span class="hljs-number">10</span>d<br>        测试          :<span class="hljs-number">2016</span><span class="hljs-number">-07</span><span class="hljs-number">-22</span>, <span class="hljs-number">5</span>d<br>    section 发布验收<br>        发布: <span class="hljs-number">2</span>d<br>        验收: <span class="hljs-number">3</span>d<br>​```<br><br>### <span class="hljs-number">7.</span> 绘制表格<br><br>| 项目        | 价格   |  数量  |<br>| --------   | -----:  | :----:  |<br>| 计算机     | \$<span class="hljs-number">1600</span> |   <span class="hljs-number">5</span>     |<br>| 手机        |   \$<span class="hljs-number">12</span>   |   <span class="hljs-number">12</span>   |<br>| 管线        |    \$<span class="hljs-number">1</span>    |  <span class="hljs-number">234</span>  |<br><br>### <span class="hljs-number">8.</span> 更详细语法说明<br><br>想要查看更详细的语法说明，可以参考我们准备的 [Cmd Markdown 简明语法手册][<span class="hljs-number">1</span>]，进阶用户可以参考 [Cmd Markdown 高阶语法手册][<span class="hljs-number">2</span>] 了解更多高级功能。<br><br>总而言之，不同于其它 *所见即所得* 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。**Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。** 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。<br><br>---<br><br>## 什么是 Cmd Markdown<br><br>您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 **编辑/发布/阅读** Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。<br><br>### <span class="hljs-number">1.</span> 实时同步预览<br><br>我们将 Cmd Markdown 的主界面一分为二，左边为**编辑区**，右边为**预览区**，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！<br><br>### <span class="hljs-number">2.</span> 编辑工具栏<br><br>也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 **编辑区** 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。<br><br>![tool-editor](https:<span class="hljs-comment">//www.zybuluo.com/static/img/toolbar-editor.png)</span><br><br>### <span class="hljs-number">3.</span> 编辑模式<br><br>完全心无旁骛的方式编辑文字：点击 **编辑工具栏** 最右侧的拉伸按钮或者按下 `Ctrl + M`，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！<br><br>### <span class="hljs-number">4.</span> 实时的云端文稿<br><br>为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 **编辑工具栏** 的最右侧提示 `已保存` 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。<br><br>### <span class="hljs-number">5.</span> 离线模式<br><br>在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。<br><br>### <span class="hljs-number">6.</span> 管理工具栏<br><br>为了便于管理您的文稿，在 **预览区** 的顶部放置了如下所示的 **管理工具栏**：<br><br>![tool-manager](https:<span class="hljs-comment">//www.zybuluo.com/static/img/toolbar-manager.jpg)</span><br><br>通过管理工具栏可以：<br><br>&lt;i <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;icon-share&quot;</span>&gt;&lt;/i&gt; 发布：将当前的文稿生成固定链接，在网络上发布，分享<br>&lt;i <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;icon-file&quot;</span>&gt;&lt;/i&gt; 新建：开始撰写一篇新的文稿<br>&lt;i <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;icon-trash&quot;</span>&gt;&lt;/i&gt; 删除：删除当前的文稿<br>&lt;i <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;icon-cloud&quot;</span>&gt;&lt;/i&gt; 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地<br>&lt;i <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;icon-reorder&quot;</span>&gt;&lt;/i&gt; 列表：所有新增和过往的文稿都可以在这里查看、操作<br>&lt;i <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;icon-pencil&quot;</span>&gt;&lt;/i&gt; 模式：切换 普通/Vim/Emacs 编辑模式<br><br>### <span class="hljs-number">7.</span> 阅读工具栏<br><br>![tool-manager](https:<span class="hljs-comment">//www.zybuluo.com/static/img/toolbar-reader.jpg)</span><br><br>通过 **预览区** 右上角的 **阅读工具栏**，可以查看当前文稿的目录并增强阅读体验。<br><br>工具栏上的五个图标依次为：<br><br>&lt;i <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;icon-list&quot;</span>&gt;&lt;/i&gt; 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落<br>&lt;i <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;icon-chevron-sign-left&quot;</span>&gt;&lt;/i&gt; 视图：互换左边编辑区和右边预览区的位置<br>&lt;i <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;icon-adjust&quot;</span>&gt;&lt;/i&gt; 主题：内置了黑白两种模式的主题，试试 **黑色主题**，超炫！<br>&lt;i <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;icon-desktop&quot;</span>&gt;&lt;/i&gt; 阅读：心无旁骛的阅读模式提供超一流的阅读体验<br>&lt;i <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;icon-fullscreen&quot;</span>&gt;&lt;/i&gt; 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境<br><br>### <span class="hljs-number">8.</span> 阅读模式<br><br>在 **阅读工具栏** 点击 &lt;i <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;icon-desktop&quot;</span>&gt;&lt;/i&gt; 或者按下 `Ctrl+Alt+M` 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。<br><br>### <span class="hljs-number">9.</span> 标签、分类和搜索<br><br>在编辑区任意行首位置输入以下格式的文字可以标签当前文档：<br><br>标签： 未分类<br><br>标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：<br><br>![file-list](https:<span class="hljs-comment">//www.zybuluo.com/static/img/file-list.png)</span><br><br>### <span class="hljs-number">10.</span> 文稿发布和分享<br><br>在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 &lt;i <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;icon-share&quot;</span>&gt;&lt;/i&gt; (Ctrl+Alt+P) 发布这份文档给好友吧！<br><br>------<br><br>再一次感谢您花费时间阅读这份欢迎稿，点击 &lt;i <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;icon-file&quot;</span>&gt;&lt;/i&gt; (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！<br><br>作者 [@ghosert][<span class="hljs-number">3</span>]     <br><span class="hljs-number">2016</span> 年 <span class="hljs-number">07</span>月 <span class="hljs-number">07</span>日    <br><br>[^LaTeX]: 支持 **LaTeX** 编辑显示支持，例如：$\sum_&#123;i=<span class="hljs-number">1</span>&#125;^n a_i=<span class="hljs-number">0</span>$， 访问 [MathJax][<span class="hljs-number">4</span>] 参考更多使用方法。<br><br>[^<span class="hljs-keyword">code</span>]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，**四十一**种主流编程语言。<br><br>[<span class="hljs-number">1</span>]: https:<span class="hljs-comment">//www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown</span><br>[<span class="hljs-number">2</span>]: https:<span class="hljs-comment">//www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-高阶语法手册</span><br>[<span class="hljs-number">3</span>]: http:<span class="hljs-comment">//weibo.com/ghosert</span><br>[<span class="hljs-number">4</span>]: http:<span class="hljs-comment">//meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference</span><br></code></pre></td></tr></table></figure><h1 id="编译后效果如下："><a href="#编译后效果如下：" class="headerlink" title="编译后效果如下："></a>编译后效果如下：</h1><hr><hr><hr><h1 id="欢迎使用-Cmd-Markdown-编辑阅读器"><a href="#欢迎使用-Cmd-Markdown-编辑阅读器" class="headerlink" title="欢迎使用 Cmd Markdown 编辑阅读器"></a>欢迎使用 Cmd Markdown 编辑阅读器</h1><hr><p>我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，<strong>Cmd Markdown</strong> 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：</p><blockquote><ul><li>整理知识，学习笔记</li><li>发布日记，杂文，所见所想</li><li>撰写发布技术文稿（代码支持）</li><li>撰写发布学术论文（LaTeX 公式支持）</li></ul></blockquote><p><img src="../%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E8%B5%84%E6%BA%90/logo.png" alt="cmd-markdown-logo"></p><p>除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：</p><h3 id="Windows-Mac-Linux-全平台客户端"><a href="#Windows-Mac-Linux-全平台客户端" class="headerlink" title="Windows/Mac/Linux 全平台客户端"></a><a href="https://www.zybuluo.com/cmd/">Windows/Mac/Linux 全平台客户端</a></h3><blockquote><p>请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 <i class="icon-file"></i> <strong>新文稿</strong> 或者使用快捷键 <code>Ctrl+Alt+N</code>。</p></blockquote><hr><h2 id="什么是-Markdown"><a href="#什么是-Markdown" class="headerlink" title="什么是 Markdown"></a>什么是 Markdown</h2><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，更棒的是，它还可以</p><h3 id="1-制作一份待办事宜-Todo-列表"><a href="#1-制作一份待办事宜-Todo-列表" class="headerlink" title="1. 制作一份待办事宜 Todo 列表"></a>1. 制作一份待办事宜 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-%E5%BE%85%E5%8A%9E%E4%BA%8B%E5%AE%9C-todo-%E5%88%97%E8%A1%A8">Todo 列表</a></h3><ul><li><input disabled="" type="checkbox"> 支持以 PDF 格式导出文稿</li><li><input disabled="" type="checkbox"> 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li><li><input checked="" disabled="" type="checkbox"> 新增 Todo 列表功能</li><li><input checked="" disabled="" type="checkbox"> 修复 LaTex 公式渲染问题</li><li><input checked="" disabled="" type="checkbox"> 新增 LaTex 公式编号功能</li></ul><h3 id="2-书写一个质能守恒公式-LaTeX"><a href="#2-书写一个质能守恒公式-LaTeX" class="headerlink" title="2. 书写一个质能守恒公式[^LaTeX]"></a>2. 书写一个质能守恒公式[^LaTeX]</h3><p>$$E=mc^2$$</p><h3 id="3-高亮一段代码-code"><a href="#3-高亮一段代码-code" class="headerlink" title="3. 高亮一段代码[^code]"></a>3. 高亮一段代码[^code]</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@requires_authorization</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SomeClass</span>:</span><br>    <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-comment"># A comment</span><br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&#x27;hello world&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="4-高效绘制-流程图"><a href="#4-高效绘制-流程图" class="headerlink" title="4. 高效绘制 流程图"></a>4. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-%E6%B5%81%E7%A8%8B%E5%9B%BE">流程图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs flow">st&#x3D;&gt;start: Start<br>op&#x3D;&gt;operation: Your Operation<br>cond&#x3D;&gt;condition: Yes or No?<br>e&#x3D;&gt;end<br><br>st-&gt;op-&gt;cond<br>cond(yes)-&gt;e<br>cond(no)-&gt;op<br></code></pre></td></tr></table></figure><h3 id="5-高效绘制-序列图"><a href="#5-高效绘制-序列图" class="headerlink" title="5. 高效绘制 序列图"></a>5. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-%E5%BA%8F%E5%88%97%E5%9B%BE">序列图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs seq">Alice-&gt;Bob: Hello Bob, how are you?<br>Note right of Bob: Bob thinks<br>Bob--&gt;Alice: I am good thanks!<br></code></pre></td></tr></table></figure><h3 id="6-高效绘制-甘特图"><a href="#6-高效绘制-甘特图" class="headerlink" title="6. 高效绘制 甘特图"></a>6. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#9-%E7%94%98%E7%89%B9%E5%9B%BE">甘特图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs gantt">title 项目开发流程<br>section 项目确定<br>    需求分析       :a1, 2016-06-22, 3d<br>    可行性报告     :after a1, 5d<br>    概念验证       : 5d<br>section 项目实施<br>    概要设计      :2016-07-05  , 5d<br>    详细设计      :2016-07-08, 10d<br>    编码          :2016-07-15, 10d<br>    测试          :2016-07-22, 5d<br>section 发布验收<br>    发布: 2d<br>    验收: 3d<br></code></pre></td></tr></table></figure><h3 id="7-绘制表格"><a href="#7-绘制表格" class="headerlink" title="7. 绘制表格"></a>7. 绘制表格</h3><table><thead><tr><th>项目</th><th align="right">价格</th><th align="center">数量</th></tr></thead><tbody><tr><td>计算机</td><td align="right">$1600</td><td align="center">5</td></tr><tr><td>手机</td><td align="right">$12</td><td align="center">12</td></tr><tr><td>管线</td><td align="right">$1</td><td align="center">234</td></tr></tbody></table><h3 id="8-更详细语法说明"><a href="#8-更详细语法说明" class="headerlink" title="8. 更详细语法说明"></a>8. 更详细语法说明</h3><p>想要查看更详细的语法说明，可以参考我们准备的 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown">Cmd Markdown 简明语法手册</a>，进阶用户可以参考 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-%E9%AB%98%E9%98%B6%E8%AF%AD%E6%B3%95%E6%89%8B%E5%86%8C">Cmd Markdown 高阶语法手册</a> 了解更多高级功能。</p><p>总而言之，不同于其它 <em>所见即所得</em> 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。</p><hr><h2 id="什么是-Cmd-Markdown"><a href="#什么是-Cmd-Markdown" class="headerlink" title="什么是 Cmd Markdown"></a>什么是 Cmd Markdown</h2><p>您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 <strong>编辑/发布/阅读</strong> Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。</p><h3 id="1-实时同步预览"><a href="#1-实时同步预览" class="headerlink" title="1. 实时同步预览"></a>1. 实时同步预览</h3><p>我们将 Cmd Markdown 的主界面一分为二，左边为<strong>编辑区</strong>，右边为<strong>预览区</strong>，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！</p><h3 id="2-编辑工具栏"><a href="#2-编辑工具栏" class="headerlink" title="2. 编辑工具栏"></a>2. 编辑工具栏</h3><p>也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 <strong>编辑区</strong> 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。</p><p><img src="../%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E8%B5%84%E6%BA%90/toolbar-editor.png" alt="tool-editor"></p><h3 id="3-编辑模式"><a href="#3-编辑模式" class="headerlink" title="3. 编辑模式"></a>3. 编辑模式</h3><p>完全心无旁骛的方式编辑文字：点击 <strong>编辑工具栏</strong> 最右侧的拉伸按钮或者按下 <code>Ctrl + M</code>，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！</p><h3 id="4-实时的云端文稿"><a href="#4-实时的云端文稿" class="headerlink" title="4. 实时的云端文稿"></a>4. 实时的云端文稿</h3><p>为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 <strong>编辑工具栏</strong> 的最右侧提示 <code>已保存</code> 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。</p><h3 id="5-离线模式"><a href="#5-离线模式" class="headerlink" title="5. 离线模式"></a>5. 离线模式</h3><p>在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。</p><h3 id="6-管理工具栏"><a href="#6-管理工具栏" class="headerlink" title="6. 管理工具栏"></a>6. 管理工具栏</h3><p>为了便于管理您的文稿，在 <strong>预览区</strong> 的顶部放置了如下所示的 <strong>管理工具栏</strong>：</p><p><img src="../%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E8%B5%84%E6%BA%90/toolbar-manager.jpg" alt="tool-manager"></p><p>通过管理工具栏可以：</p><p><i class="icon-share"></i> 发布：将当前的文稿生成固定链接，在网络上发布，分享<br><i class="icon-file"></i> 新建：开始撰写一篇新的文稿<br><i class="icon-trash"></i> 删除：删除当前的文稿<br><i class="icon-cloud"></i> 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地<br><i class="icon-reorder"></i> 列表：所有新增和过往的文稿都可以在这里查看、操作<br><i class="icon-pencil"></i> 模式：切换 普通/Vim/Emacs 编辑模式</p><h3 id="7-阅读工具栏"><a href="#7-阅读工具栏" class="headerlink" title="7. 阅读工具栏"></a>7. 阅读工具栏</h3><p><img src="../%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E8%B5%84%E6%BA%90/toolbar-reader.jpg" alt="tool-manager"></p><p>通过 <strong>预览区</strong> 右上角的 <strong>阅读工具栏</strong>，可以查看当前文稿的目录并增强阅读体验。</p><p>工具栏上的五个图标依次为：</p><p><i class="icon-list"></i> 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落<br><i class="icon-chevron-sign-left"></i> 视图：互换左边编辑区和右边预览区的位置<br><i class="icon-adjust"></i> 主题：内置了黑白两种模式的主题，试试 <strong>黑色主题</strong>，超炫！<br><i class="icon-desktop"></i> 阅读：心无旁骛的阅读模式提供超一流的阅读体验<br><i class="icon-fullscreen"></i> 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境</p><h3 id="8-阅读模式"><a href="#8-阅读模式" class="headerlink" title="8. 阅读模式"></a>8. 阅读模式</h3><p>在 <strong>阅读工具栏</strong> 点击 <i class="icon-desktop"></i> 或者按下 <code>Ctrl+Alt+M</code> 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。</p><h3 id="9-标签、分类和搜索"><a href="#9-标签、分类和搜索" class="headerlink" title="9. 标签、分类和搜索"></a>9. 标签、分类和搜索</h3><p>在编辑区任意行首位置输入以下格式的文字可以标签当前文档：</p><p>标签： 未分类</p><p>标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：</p><p><img src="../%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E8%B5%84%E6%BA%90/file-list.png" alt="file-list"></p><h3 id="10-文稿发布和分享"><a href="#10-文稿发布和分享" class="headerlink" title="10. 文稿发布和分享"></a>10. 文稿发布和分享</h3><p>在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class="icon-share"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！</p><hr><p>再一次感谢您花费时间阅读这份欢迎稿，点击 <i class="icon-file"></i> (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！</p><p>作者 <a href="http://weibo.com/ghosert">@ghosert</a><br>2016 年 07月 07日    </p><p>[^LaTeX]: 支持 <strong>LaTeX</strong> 编辑显示支持，例如：$\sum_{i=1}^n a_i=0$， 访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference">MathJax</a> 参考更多使用方法。</p><p>[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，<strong>四十一</strong>种主流编程语言。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一段markdown编写范例文章，包含大部分markdown语法，留作忘记时备用&lt;/p&gt;
&lt;p&gt;转自&lt;a href=&quot;https://www.zybuluo.com/mdeditor&quot;&gt;https://www.zybuluo.com/mdeditor&lt;/a&gt;&lt;/p&gt;
&lt;fi</summary>
      
    
    
    
    <category term="markdown" scheme="http://example.com/categories/markdown/"/>
    
    
    <category term="markdown" scheme="http://example.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>贴一个认知实习写的python爬虫</title>
    <link href="http://example.com/2021/01/27/2021-1-27-%E8%B4%B4%E4%B8%80%E4%B8%AA%E8%AE%A4%E7%9F%A5%E5%AE%9E%E4%B9%A0%E5%86%99%E7%9A%84python%E7%88%AC%E8%99%AB/"/>
    <id>http://example.com/2021/01/27/2021-1-27-%E8%B4%B4%E4%B8%80%E4%B8%AA%E8%AE%A4%E7%9F%A5%E5%AE%9E%E4%B9%A0%E5%86%99%E7%9A%84python%E7%88%AC%E8%99%AB/</id>
    <published>2021-01-27T08:08:00.000Z</published>
    <updated>2021-01-27T12:35:05.004Z</updated>
    
    <content type="html"><![CDATA[<p>实习大作业制作了爬取bangumi动画排行网站的前100名动画排名及评分等数据，通过动画的评分和年份等数据，分析不同年代用户的喜好，以及不同年代高分动画的占比并将其保存至表格并制作了图表。程序分为爬虫本体和可视化程序。<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="数据源于2020/6/28">[1]</span></a></sup></p><h3 id="爬虫本体"><a href="#爬虫本体" class="headerlink" title="爬虫本体"></a>爬虫本体</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getHTMLText</span>(<span class="hljs-params">url</span>):</span><br>    headers=&#123;<span class="hljs-string">&quot;Accept&quot;</span>:<span class="hljs-string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&quot;</span>,<br>             <span class="hljs-string">&quot;User-Agent&quot;</span>:<span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36&quot;</span>,<br>             <span class="hljs-string">&quot;Cookie&quot;</span>:<span class="hljs-string">&quot;chii_theme=light; chii_sid=juvruV; __utmc=1; __utmz=1.1593152733.8.6.utmcsr=baidu|utmccn=(organic)|utmcmd=organic; __utma=1.673048667.1582112818.1593152733.1593156335.9; __utmt=1; __utmb=1.1.10.1593156335&quot;</span>&#125;<br>    <span class="hljs-keyword">try</span>:<br>        r = requests.get(url,headers=headers,timeout=<span class="hljs-number">30</span>)<br>        r.raise_for_status()<br>        r.encoding = r.apparent_encoding<br>        <span class="hljs-keyword">return</span> r.text<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span> <br></code></pre></td></tr></table></figure><p>第一个函数getInfo我使用了request.get方法，headers选择了Mozilla/5.0以便成功爬取网站。爬取内容函数采用try-except结构，try里边采用raise_for_status，若返回值不为200将返回空值，避免程序报错。返回值r.text包含网页全部内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">parsePage</span>(<span class="hljs-params">List1, List2, html</span>):</span><br>    <span class="hljs-keyword">try</span>:<br>        rank_tag=<span class="hljs-string">r&#x27;&lt;span class=\&quot;rank\&quot;&gt;(.*?)&lt;/span&gt;&#x27;</span><br>        rank_find=re.findall(rank_tag, html, re.S|re.M)  <br>        CHNname_tag=<span class="hljs-string">r&#x27;&lt;a href=\&quot;/subject/\d&#123;,6&#125;\&quot; class=\&quot;l\&quot;&gt;(.*?)&lt;/a&gt;&#x27;</span>  <br>        CHNname_find=re.findall(CHNname_tag, html, re.S|re.M)<br>        score_tag=<span class="hljs-string">r&#x27;&lt;small class=\&quot;fade\&quot;&gt;(.*?)&lt;/small&gt;&#x27;</span><br>        score_find=re.findall(score_tag, html, re.S|re.M)<br>        scoreNum_tag=<span class="hljs-string">r&#x27;&lt;span class=\&quot;tip_j\&quot;&gt;(.*?)&lt;/span&gt;&#x27;</span> <br>        scoreNum_find=re.findall(scoreNum_tag, html, re.S|re.M)<br>        info_tag=<span class="hljs-string">r&#x27;&lt;p class=\&quot;info tip\&quot;&gt;(.*?)&lt;/p&gt;&#x27;</span> <br>        info_find=re.findall(info_tag, html, re.S|re.M)<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(CHNname_find)):<br>            rank=rank_find[i].strip(<span class="hljs-string">&#x27;&lt;small&gt;Rank &lt;/small&gt;&#x27;</span>)<br>            <span class="hljs-keyword">if</span>(rank==<span class="hljs-string">&quot;101&quot;</span>):<br>                <span class="hljs-keyword">break</span><br>            CHNname= CHNname_find[i].strip()<br>            score=score_find[i].strip()<br>            scoreNum=scoreNum_find[i].strip(<span class="hljs-string">&#x27;(,)&#x27;</span>)<br>            info=info_find[i].strip()<br>            <span class="hljs-keyword">if</span>(rank==<span class="hljs-string">&quot;37&quot;</span> <span class="hljs-keyword">or</span> rank==<span class="hljs-string">&quot;91&quot;</span>):<br>                a=info[:<span class="hljs-number">4</span>]<br>            <span class="hljs-keyword">else</span>:<br>                a=info[<span class="hljs-number">5</span>:<span class="hljs-number">19</span>]<br>                a=a.strip(<span class="hljs-string">&#x27;/ &#x27;</span>)<br>                a=a[:<span class="hljs-number">4</span>]<br>            List1.append([rank,CHNname,score,scoreNum,info])<br>            List2.append([rank,CHNname,a,score,scoreNum.strip(<span class="hljs-string">&#x27;人评分&#x27;</span>)])<br>    <span class="hljs-keyword">except</span>:<br>        print(<span class="hljs-string">&quot;&quot;</span>)<br></code></pre></td></tr></table></figure><p>第二个函数selectInfo同样采用try-except结构，我使用了正则表达式方法筛选内容，共筛选排名、中文名、评分、评分人数、集数/上映日期/主要制片人五个内容。之后使用for循环将每个内容经过修饰后添加进参数列表中，成功获取全部所需爬取内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">printList</span>(<span class="hljs-params">List</span>):</span><br>    tplt = <span class="hljs-string">&quot;&#123;0:^4&#125;\t&#123;1:25&#125;\t&#123;2:4&#125;\t&#123;3:&#123;5&#125;&gt;10&#125;\t&#123;4:&#123;5&#125;&lt;30&#125;&quot;</span><br>    print(tplt.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;排名&quot;</span>, <span class="hljs-string">&quot;中文名&quot;</span>,<span class="hljs-string">&quot;评分&quot;</span>,<span class="hljs-string">&quot;评分人数&quot;</span>,<span class="hljs-string">&quot;集数/上映日期/主要制片人&quot;</span>,<span class="hljs-built_in">chr</span>(<span class="hljs-number">12288</span>)))<br>    <span class="hljs-keyword">for</span> g <span class="hljs-keyword">in</span> List:<br>        print(tplt.<span class="hljs-built_in">format</span>(g[<span class="hljs-number">0</span>], g[<span class="hljs-number">1</span>], g[<span class="hljs-number">2</span>], g[<span class="hljs-number">3</span>], g[<span class="hljs-number">4</span>],<span class="hljs-built_in">chr</span>(<span class="hljs-number">12288</span>)))<br></code></pre></td></tr></table></figure><p>第三个函数printList用于输出全部内容，采用format方法为内容排列格式，定义tplt变量存取每列数据宽度，其中中文空格符号采用chr(12288)来表示，用于防止文字不齐。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">writeInList</span>(<span class="hljs-params">List1,List2</span>):</span><br>    headers1 = [<span class="hljs-string">&quot;排名&quot;</span>, <span class="hljs-string">&quot;中文名&quot;</span>,<span class="hljs-string">&quot;评分&quot;</span>,<span class="hljs-string">&quot;评分人数&quot;</span>,<span class="hljs-string">&quot;集数/上映日期/主要制片人&quot;</span>]<br>    f=pd.DataFrame(columns=headers1,data=List1)<br>    f.to_csv(<span class="hljs-string">&quot;G:\XiaoxueqiData\\rankdata.csv&quot;</span>, index=<span class="hljs-literal">False</span>,encoding=<span class="hljs-string">&#x27;utf-8-sig&#x27;</span>)<br>    headers2 = [<span class="hljs-string">&quot;排名&quot;</span>, <span class="hljs-string">&quot;中文名&quot;</span>,<span class="hljs-string">&quot;年份&quot;</span>,<span class="hljs-string">&quot;评分&quot;</span>,<span class="hljs-string">&quot;评分人数&quot;</span>]<br>    f2=pd.DataFrame(columns=headers2,data=List2)<br>    f2.to_csv(<span class="hljs-string">&quot;G:\XiaoxueqiData\\yeardata.csv&quot;</span>, index=<span class="hljs-literal">False</span>,encoding=<span class="hljs-string">&#x27;utf-8-sig&#x27;</span>)<br></code></pre></td></tr></table></figure><p>第四个函数writeInList向csv表格文件输入内容，采用pd.DataFrame和to_csv方法，成功获取csv数据文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br>    depth = <span class="hljs-number">5</span><br>    start_url = <span class="hljs-string">&#x27;https://bangumi.tv/anime/browser?sort=rank&#x27;</span><br>    rankList = []<br>    yearList=[]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(depth):<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-comment">#print(&quot;test&quot;)</span><br>            url = start_url+ <span class="hljs-string">&#x27;&amp;page=&#x27;</span> + <span class="hljs-built_in">str</span>(i+<span class="hljs-number">1</span>)<br>            <span class="hljs-comment">#print(url)</span><br>            html = getHTMLText(url)<br>            parsePage(rankList,yearList, html)<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">continue</span><br>    printList(rankList)<br>    writeInList(rankList,yearList)<br>main()<br></code></pre></td></tr></table></figure><p>第五个函数为main主函数，定义depth变量控制爬取页数，start_url存取所爬取网站，定义rankList和yearList两个表格分别用于存取完整全部数据和单独年份数据，rankList表用于观察，yearList表截取数据中的数字部分用于计算；</p><p>输出excel表格效果如下：</p><p><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210127203406.png" alt="微信截图_20200628195546"></p><p align="center">图 1-rankdata表</p><p><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210127203407.png" alt="微信截图_20200628195623"></p><p align="center">图 2-yeardata表</p><p>采用for循环遍历五个网页，每一页网页网址后添加“&amp;page=”和页码即可实现翻译效果；采用try-except结构避免程序报错，最后调用printList和writeInList方法。至此爬取网页内容并筛选部分完成。</p><h3 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib <span class="hljs-keyword">as</span> mpl<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">countavg</span>(<span class="hljs-params">firsty,secondy</span>):</span><br>    df=pd.read_csv(<span class="hljs-string">&quot;G:\XiaoxueqiData\\yeardata.csv&quot;</span>)<br>    year=np.array([df[<span class="hljs-string">&#x27;年份&#x27;</span>].values,df[<span class="hljs-string">&#x27;评分人数&#x27;</span>].values])<br>    a=[]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> np.where((year[<span class="hljs-number">0</span>]&lt;=secondy)&amp;(year[<span class="hljs-number">0</span>]&gt;firsty)):<br>        a=i<br>    total=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>        total = total + year[<span class="hljs-number">1</span>][i]<br>    avgNum=<span class="hljs-built_in">int</span>(total/<span class="hljs-built_in">len</span>(a))<br>    <span class="hljs-keyword">return</span> avgNum<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">countScoreavg</span>(<span class="hljs-params">firsty,secondy</span>):</span><br>    df=pd.read_csv(<span class="hljs-string">&quot;G:\XiaoxueqiData\\yeardata.csv&quot;</span>)<br>    year2=np.array([df[<span class="hljs-string">&#x27;年份&#x27;</span>].values,df[<span class="hljs-string">&#x27;评分&#x27;</span>].values])<br>    b=[]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> np.where((year2[<span class="hljs-number">0</span>]&lt;=secondy)&amp;(year2[<span class="hljs-number">0</span>]&gt;firsty)):<br>        b=i<br>    total=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> b:<br>        total = total + year2[<span class="hljs-number">1</span>][i]<br>    avgNum=<span class="hljs-built_in">round</span>(total/<span class="hljs-built_in">len</span>(b),<span class="hljs-number">2</span>)<br>    <span class="hljs-keyword">return</span> avgNum<br></code></pre></td></tr></table></figure><p>第一个函数countavg用于计算平均评分人数，第二个函数countScoreavg用于计算平均分，供下面函数printNumberTable和printScoreTable使用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">printNumberTable</span>():</span><br>    num90=countavg(<span class="hljs-number">0</span>,<span class="hljs-number">1990</span>)<br>    num90_00=countavg(<span class="hljs-number">1990</span>,<span class="hljs-number">2000</span>)<br>    num00_10=countavg(<span class="hljs-number">2000</span>,<span class="hljs-number">2010</span>)<br>    num10=countavg(<span class="hljs-number">2010</span>,<span class="hljs-number">2021</span>)<br>    name_list = [<span class="hljs-string">&#x27;1990年前&#x27;</span>,<span class="hljs-string">&#x27;1990-2000年&#x27;</span>,<span class="hljs-string">&#x27;2000-2010年&#x27;</span>,<span class="hljs-string">&#x27;2010年至今&#x27;</span>]  <br>    num_list = [num90,num90_00,num00_10,num10]  <br>    plt.bar(<span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(num_list)), num_list,color=<span class="hljs-string">&#x27;rgby&#x27;</span>,tick_label = name_list)<br>    <span class="hljs-keyword">for</span> a,b <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(<span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(num_list)), num_list):<br>        plt.text(a, b+<span class="hljs-number">0.05</span>, b, ha=<span class="hljs-string">&#x27;center&#x27;</span>, va=<span class="hljs-string">&#x27;bottom&#x27;</span>, fontsize=<span class="hljs-number">10</span>)<br>    plt.title(<span class="hljs-string">&#x27;前100名各年代动画平均评分人数&#x27;</span>)<br>    plt.xlabel(<span class="hljs-string">&#x27;年代&#x27;</span>)<br>    plt.ylabel(<span class="hljs-string">&#x27;人数&#x27;</span>)<br>    plt.show()<br></code></pre></td></tr></table></figure><p>第三个函数printNumberTable输出各年代动画平均评分人数柱状图，柱状图输出采用plt.bar方法，采用plt.text装饰图形内容，之后定义标题和xy轴名称。</p><p><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210127203408.png" alt="微信截图_20200628192634"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">printScoreTable</span>():</span><br>    num90=countScoreavg(<span class="hljs-number">0</span>,<span class="hljs-number">1990</span>)<br>    num90_00=countScoreavg(<span class="hljs-number">1990</span>,<span class="hljs-number">2000</span>)<br>    num00_10=countScoreavg(<span class="hljs-number">2000</span>,<span class="hljs-number">2010</span>)<br>    num10=countScoreavg(<span class="hljs-number">2010</span>,<span class="hljs-number">2021</span>)<br>    name_list = [<span class="hljs-string">&#x27;1990年前&#x27;</span>,<span class="hljs-string">&#x27;1990-2000年&#x27;</span>,<span class="hljs-string">&#x27;2000-2010年&#x27;</span>,<span class="hljs-string">&#x27;2010年至今&#x27;</span>]  <br>    num_list = [num90,num90_00,num00_10,num10]  <br>    plt.bar(<span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(num_list)), num_list,color=<span class="hljs-string">&#x27;ybgr&#x27;</span>,tick_label = name_list)<br>    <span class="hljs-keyword">for</span> a,b <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(<span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(num_list)), num_list):<br>        plt.text(a, b+<span class="hljs-number">0.05</span>, b, ha=<span class="hljs-string">&#x27;center&#x27;</span>, va=<span class="hljs-string">&#x27;bottom&#x27;</span>, fontsize=<span class="hljs-number">10</span>)<br>    plt.title(<span class="hljs-string">&#x27;前100名各年代动画平均评分&#x27;</span>)<br>    plt.xlabel(<span class="hljs-string">&#x27;年代&#x27;</span>)<br>    plt.ylabel(<span class="hljs-string">&#x27;平均分&#x27;</span>)<br>    plt.show()<br></code></pre></td></tr></table></figure><p>第四个函数printScoreTable输出各年代动画平均分柱状图。</p><p><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210127203409.png" alt="微信截图_20200628192644"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">printPercent</span>():</span><br>    df=pd.read_csv(<span class="hljs-string">&quot;G:\XiaoxueqiData\\yeardata.csv&quot;</span>)<br>    df.index = np.arange(<span class="hljs-number">1</span>, <span class="hljs-built_in">len</span>(df)+<span class="hljs-number">1</span>)<br>    mpl.rcParams[<span class="hljs-string">&#x27;font.sans-serif&#x27;</span>]=[<span class="hljs-string">&#x27;Fangsong&#x27;</span>]<br>    li=np.array(df[<span class="hljs-string">&#x27;年份&#x27;</span>].values)<br>    l1=np.where((li&lt;=<span class="hljs-number">1990</span>))<br>    sum1=<span class="hljs-built_in">len</span>(l1[<span class="hljs-number">0</span>])<br>    l2=np.where((li&lt;=<span class="hljs-number">2000</span>)&amp;(li&gt;<span class="hljs-number">1990</span>))<br>    sum2=<span class="hljs-built_in">len</span>(l2[<span class="hljs-number">0</span>])<br>    l3=np.where((li&lt;=<span class="hljs-number">2010</span>)&amp;(li&gt;<span class="hljs-number">2000</span>))<br>    sum3=<span class="hljs-built_in">len</span>(l3[<span class="hljs-number">0</span>])<br>    l4=np.where((li&gt;<span class="hljs-number">2010</span>))<br>    sum4=<span class="hljs-built_in">len</span>(l4[<span class="hljs-number">0</span>])<br>    labels=<span class="hljs-string">&#x27;1990年前&#x27;</span>,<span class="hljs-string">&#x27;1990-2000年&#x27;</span>,<span class="hljs-string">&#x27;2000-2010年&#x27;</span>,<span class="hljs-string">&#x27;2010年至今&#x27;</span><br>    sizes = [sum1/(sum1+sum2+sum3+sum4),sum2/(sum1+sum2+sum3+sum4),sum3/(sum1+sum2+sum3+sum4),sum4/(sum1+sum2+sum3+sum4)]<br>    plt.pie(sizes,labels=labels,autopct=<span class="hljs-string">&#x27;%1.1f%%&#x27;</span>)<br>    plt.title(<span class="hljs-string">&quot;各年代动画占前100名比例&quot;</span>,fontproperties=<span class="hljs-string">&quot;SimHei&quot;</span>)<br>    plt.show()<br><br></code></pre></td></tr></table></figure><p>第五个函数printPercent输出各年代动画占前100名比例饼图，采用np.where方法获取指定年份列表，采用plt.pie方法输出饼图。</p><p><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210127203410.png" alt="微信截图_20200628192706"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">printPercentTable</span>():</span><br>    df=pd.read_csv(<span class="hljs-string">&quot;G:\XiaoxueqiData\\yeardata.csv&quot;</span>)<br>    df.index = np.arange(<span class="hljs-number">1</span>, <span class="hljs-built_in">len</span>(df)+<span class="hljs-number">1</span>)<br>    mpl.rcParams[<span class="hljs-string">&#x27;font.sans-serif&#x27;</span>]=[<span class="hljs-string">&#x27;Fangsong&#x27;</span>]<br>    li=np.array(df[<span class="hljs-string">&#x27;年份&#x27;</span>].values)<br>    l1=np.where((li&lt;=<span class="hljs-number">1990</span>))<br>    sum1=<span class="hljs-built_in">len</span>(l1[<span class="hljs-number">0</span>])<br>    l2=np.where((li&lt;=<span class="hljs-number">2000</span>)&amp;(li&gt;<span class="hljs-number">1990</span>))<br>    sum2=<span class="hljs-built_in">len</span>(l2[<span class="hljs-number">0</span>])<br>    l3=np.where((li&lt;=<span class="hljs-number">2010</span>)&amp;(li&gt;<span class="hljs-number">2000</span>))<br>    sum3=<span class="hljs-built_in">len</span>(l3[<span class="hljs-number">0</span>])<br>    l4=np.where((li&gt;<span class="hljs-number">2010</span>))<br>    sum4=<span class="hljs-built_in">len</span>(l4[<span class="hljs-number">0</span>])<br>    sizes = [sum1/(sum1+sum2+sum3+sum4),sum2/(sum1+sum2+sum3+sum4),sum3/(sum1+sum2+sum3+sum4),sum4/(sum1+sum2+sum3+sum4)]<br>    name_list = [<span class="hljs-string">&#x27;1990年前&#x27;</span>,<span class="hljs-string">&#x27;1990-2000年&#x27;</span>,<span class="hljs-string">&#x27;2000-2010年&#x27;</span>,<span class="hljs-string">&#x27;2010年至今&#x27;</span>] <br>    plt.bar(<span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(sizes)), sizes,color=<span class="hljs-string">&#x27;rgby&#x27;</span>,tick_label = name_list)<br>    <span class="hljs-keyword">for</span> a,b <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(<span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(sizes)), sizes):<br>        plt.text(a, b+<span class="hljs-number">0.001</span>, <span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(b*<span class="hljs-number">100</span>))+<span class="hljs-string">&quot;%&quot;</span>, ha=<span class="hljs-string">&#x27;center&#x27;</span>, va=<span class="hljs-string">&#x27;bottom&#x27;</span>, fontsize=<span class="hljs-number">10</span>)<br>    plt.title(<span class="hljs-string">&#x27;各年代动画占前100名比例&#x27;</span>)<br>    plt.xlabel(<span class="hljs-string">&#x27;年代&#x27;</span>)<br>    plt.ylabel(<span class="hljs-string">&#x27;比例&#x27;</span>)<br>    plt.show()<br></code></pre></td></tr></table></figure><p>第六个函数printPercentTable输出各年代动画占前100名比例柱状图。</p><p><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210127203411.png" alt="微信截图_20200628192712"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Mrecent100</span>():</span><br>    df=pd.read_csv(<span class="hljs-string">&quot;G:\XiaoxueqiData\\yeardata.csv&quot;</span>)<br>    df.index = np.arange(<span class="hljs-number">1</span>, <span class="hljs-built_in">len</span>(df)+<span class="hljs-number">1</span>)<br>    year=np.array(df[<span class="hljs-string">&#x27;年份&#x27;</span>].values)<br>    df2=pd.read_csv(<span class="hljs-string">&quot;G:\XiaoxueqiData\\rankdata.csv&quot;</span>)<br>    df2.index = np.arange(<span class="hljs-number">1</span>, <span class="hljs-built_in">len</span>(df)+<span class="hljs-number">1</span>)<br>    rank=np.array(df2[<span class="hljs-string">&#x27;排名&#x27;</span>].values)<br>    name=np.array(df2[<span class="hljs-string">&#x27;中文名&#x27;</span>].values)<br>    score=np.array(df2[<span class="hljs-string">&#x27;评分&#x27;</span>].values)<br>    recent=year[<span class="hljs-number">0</span>]<br>    recent_index=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">22</span>):<br>        a=year[i]<br>        <span class="hljs-keyword">if</span> a &gt; recent:<br>            recent=a<br>            recent_index=np.argwhere(year==a)<br>            b=recent_index[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]<br>    print(<span class="hljs-string">&quot;距今最近的进入前20名的动画为:&#123;0&#125;，年份:&#123;1&#125;，排名:&#123;2&#125;，得分:&#123;3&#125;&quot;</span>.<span class="hljs-built_in">format</span>(name[b],year[b],rank[b],score[b]))<br></code></pre></td></tr></table></figure><p>第七个函数Mrecent20输出距今最近的进入前20名的动画，采用pd.read_csv分别读取yeardata和rankdata两个表格，获取该最大年份在yeardata表中索引位置后，在rankdata表获取该索引位置处数据并输出。</p><p><img src="https://jacob-q.oss-cn-beijing.aliyuncs.com/img/20210127203412.png" alt="微信截图_20200628192812"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">printList</span>():</span><br>    data_index = pd.read_csv(<span class="hljs-string">&quot;G:\XiaoxueqiData\\rankdata.csv&quot;</span>,encoding=<span class="hljs-string">&#x27;utf-8-sig&#x27;</span>)<br>    data_index = data_index.fillna(method=<span class="hljs-string">&quot;ffill&quot;</span>)  <span class="hljs-comment">#缺失值处理</span><br>    data_index.columns = [<span class="hljs-string">&quot;排名&quot;</span>,<span class="hljs-string">&quot;中文名&quot;</span>,<span class="hljs-string">&quot;评分&quot;</span>,<span class="hljs-string">&quot;评分人数&quot;</span>,<span class="hljs-string">&quot;集数/上映日期/主要制片人&quot;</span>]<br>    print(data_index)<br><br>printList()<br>printPercent()<br><span class="hljs-comment">#printPercentTable()</span><br><span class="hljs-comment">#printNumberTable()</span><br><span class="hljs-comment">#printScoreTable()</span><br>Mrecent100()<br></code></pre></td></tr></table></figure><p>第八个函数printList输出rankdata csv文件的表格。  </p><p>最后调用这几个函数输出图像和数据。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>  通过此次爬取的数据分析，获取了各年代动画占前100名比例，其中2000-2010年代动画占比最大，为42%。说明这个时间段为动画的黄金年代，出品了最多的优质作品，1990年前占比最小为11%，说明这时候动画行业还在启蒙阶段，作品数不是很多；获取了各年代动画平均评分人数，其中同样是2000-2010年平均评分人数最多，为4699人，说明观众更关注这个年代的作品；获取了前100名各年代动画平均评分，各年代差距不大，均在8.5左右，说明在分数/质量上，各年代的作品都很优秀；获取了距今最近的进入前20名的动画为进击的巨人 第三季，是2019年的作品，评分8.7，排名第19，说明当代的作品还是能够和历史上的那些名作一较高下的。</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>数据源于2020/6/28<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;实习大作业制作了爬取bangumi动画排行网站的前100名动画排名及评分等数据，通过动画的评分和年份等数据，分析不同年代用户的喜好，以及不同年代高分动画的占比并将其保存至表格并制作了图表。程序分为爬虫本体和可视化程序。&lt;sup id=&quot;fnref:1&quot; class=&quot;foo</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>测试</title>
    <link href="http://example.com/2021/01/04/test/"/>
    <id>http://example.com/2021/01/04/test/</id>
    <published>2021-01-04T09:11:41.000Z</published>
    <updated>2021-01-23T05:53:10.690Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><p>内容<br>test</p><hr><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><p>内容<br>test</p><hr><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>内容<br>test</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;第一章&quot;&gt;&lt;a href=&quot;#第一章&quot; class=&quot;headerlink&quot; title=&quot;第一章&quot;&gt;&lt;/a&gt;第一章&lt;/h2&gt;&lt;p&gt;内容&lt;br&gt;test&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;第二章&quot;&gt;&lt;a href=&quot;#第二章&quot; class=&quot;headerlink&quot;</summary>
      
    
    
    
    
  </entry>
  
</feed>
